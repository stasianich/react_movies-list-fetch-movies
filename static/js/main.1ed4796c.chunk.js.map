{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","Title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getFilm","title","url","fetch","then","response","json","error","Error","FindMovie","onAdd","useState","input","setInput","movieCard","setMovie","setError","isLoading","setIsLoading","getMovie","a","data","Response","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","color","height","width","App","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ed4796c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=21a66101';\n\nexport const getFilm = (title) => {\n  const url = `${BASE_URL}&t=${title}`;\n\n  return fetch(url)\n    .then((response) => {\n      try {\n        return response.json();\n      } catch (error) {\n        throw new Error('Can&apos;t find a movie with such a title');\n      }\n    });\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport Loader from 'react-loader-spinner';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { getFilm } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [input, setInput] = useState('');\n  const [movieCard, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getMovie = async() => {\n    setIsLoading(true);\n\n    const data = await getFilm(input);\n\n    setIsLoading(false);\n\n    if (data.Response === 'False') {\n      setMovie(null);\n      setError('Can`t find a movie with such a title');\n\n      return;\n    }\n\n    setMovie({\n      Title: data.Title,\n      description: data.Plot,\n      imgUrl: data.Poster,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n      imdbId: data.imdbID,\n    });\n\n    setInput('');\n    setError('');\n  };\n\n  const addMovie = () => {\n    onAdd(movieCard);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': error,\n                },\n              )}\n              value={input}\n              onChange={event => setInput(event.target.value)}\n            />\n          </div>\n          {!movieCard && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          isLoading\n            ? (\n              <Loader\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n              />\n            )\n            : movieCard && <MovieCard {...movieCard} />\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovies = (newMovie) => {\n    if (newMovie && !movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}